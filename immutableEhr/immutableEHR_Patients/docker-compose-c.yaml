version: '2'
volumes:
  orderer.example.com:
  peer0.Patients.example.com:
  peer1.Patients.example.com:

services:

  orderer.exapmle.com:
    container_name: orderer.example.com
    image: hyperledger/fabric-orderer
    environment:
      - ORDERER_GENERAL_LOGLEVEL=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
      - ./channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/msp:/var/hyperledger/orderer/msp
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/:/var/hyperledger/orderer/tls
      - orderer.example.com:/var/hyperledger/production/orderer
    ports:
      - 7050:7050
    networks:
      - byff
 
  ca0:
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-Patients
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.Patients.example.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/6d437da154e20fb1e768550da111ee0b404488a2cec2bf01b54ea89993fae08a_sk
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.Patients.example.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/6d437da154e20fb1e768550da111ee0b404488a2cec2bf01b54ea89993fae08a_sk -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/Patients.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca_peerPatients
    networks:
      - byff

  peer0.Patients.example.com:
    container_name: peer0.Patients.example.com
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=byff
      #- CORE_LOGGING_LEVEL=INFO
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.Patients.example.com
      - CORE_PEER_ADDRESS=peer0.Patients.example.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.Patients.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.Patients.example.com:7051
      - CORE_PEER_LOCALMSPID=PatientsMSP
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/Patients.example.com/peers/peer0.Patients.example.com/msp:/etc/hyperledger/fabric/msp
      - ./crypto-config/peerOrganizations/Patients.example.com/peers/peer0.Patients.example.com/tls:/etc/hyperledger/fabric/tls
      - peer0.Patients.example.com:/var/hyperledger/production
    ports:
      - "7051:7051"
      - "7053:7053"
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    networks:
      - byff

  peer1.Patients.example.com:
    container_name: peer1.Patients.example.com
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=byff
      - CORE_LOGGING_LEVEL=DEBUG
      #- CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer1.Patients.example.com
      - CORE_PEER_ADDRESS=peer1.Patients.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.Patients.example.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.Patients.example.com:7051
      - CORE_PEER_LOCALMSPID=PatientsMSP
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/Patients.example.com/peers/peer1.Patients.example.com/msp:/etc/hyperledger/fabric/msp
      - ./crypto-config/peerOrganizations/Patients.example.com/peers/peer1.Patients.example.com/tls:/etc/hyperledger/fabric/tls
      - peer1.Patients.example.com:/var/hyperledger/production
    ports:
      - "8051:7051"
      - "8053:7053"
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    networks:
      - byff

  cli:
    container_name: cli
    image: hyperledger/fabric-tools
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      #- CORE_LOGGING_LEVEL=DEBUG
      - CORE_LOGGING_LEVEL=INFO
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.Patients.example.com:7051
      - CORE_PEER_LOCALMSPID=PatientsMSP
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/Patients.example.com/peers/peer0.Patients.example.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/Patients.example.com/peers/peer0.Patients.example.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/Patients.example.com/peers/peer0.Patients.example.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/Patients.example.com/users/Admin@Patients.example.com/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ./chaincode/:/opt/gopath/src/github.com/chaincode
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        #- ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
    networks:
      - byff
networks:
  byff: