version: '3'
volumes:
  orderer0.example.com:
  orderer1.example.com:
  orderer2.example.com:
  peer0.DOMAIN.example.com:
  peer1.DOMAIN.example.com:

services:

  zookeeper0:
    image: hyperledger/fabric-zookeeper:x86_64-0.4.6
    hostname: zookeeper0
    environment:
      - ZOO_MY_ID=1
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    ports:
      - 2181
      - 2888
      - 3888
    networks:
      EXTERNAL_NETWORK:
        aliases:
          - zookeeper0
  zookeeper1:
    image: hyperledger/fabric-zookeeper:x86_64-0.4.6
    hostname: zookeeper1
    environment:
      - ZOO_MY_ID=2
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    ports:
      - 2181
      - 2888
      - 3888
    networks:
      EXTERNAL_NETWORK:
        aliases:
          - zookeeper1
  zookeeper2:
    image: hyperledger/fabric-zookeeper:x86_64-0.4.6
    hostname: zookeeper2
    environment:
      - ZOO_MY_ID=3
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    ports:
      - 2181
      - 2888
      - 3888
    networks:
      EXTERNAL_NETWORK:
        aliases:
          - zookeeper2

  kafka0:
    image: hyperledger/fabric-kafka:x86_64-0.4.6
    hostname: kafka0
    environment:
      - KAFKA_LOG_RETENTION_MS=-1
      - KAFKA_MESSAGE_MAX_BYTES=1000012
      - KAFKA_REPLICA_FETCH_MAX_BYTES=1048576
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_BROKER_ID=0
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
      - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=10485760
    ports:
      - 9092
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      EXTERNAL_NETWORK:
        aliases:
          - kafka0
  kafka1:
    image: hyperledger/fabric-kafka:x86_64-0.4.6
    hostname: kafka1
    environment:
      - KAFKA_LOG_RETENTION_MS=-1
      - KAFKA_MESSAGE_MAX_BYTES=1000012
      - KAFKA_REPLICA_FETCH_MAX_BYTES=1048576
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
      - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=10485760
    ports:
      - 9092
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      EXTERNAL_NETWORK:
        aliases:
          - kafka1
  kafka2:
    image: hyperledger/fabric-kafka:x86_64-0.4.6
    hostname: kafka2
    environment:
      - KAFKA_LOG_RETENTION_MS=-1
      - KAFKA_MESSAGE_MAX_BYTES=1000012
      - KAFKA_REPLICA_FETCH_MAX_BYTES=1048576
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_BROKER_ID=2
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
      - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=10485760
    ports:
      - 9092
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      EXTERNAL_NETWORK:
        aliases:
          - kafka2
  kafka3:
    image: hyperledger/fabric-kafka:x86_64-0.4.6
    hostname: kafka3
    environment:
      - KAFKA_LOG_RETENTION_MS=-1
      - KAFKA_MESSAGE_MAX_BYTES=1000012
      - KAFKA_REPLICA_FETCH_MAX_BYTES=1048576
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_BROKER_ID=3
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
      - KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=10485760
    ports:
      - 9092
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      EXTERNAL_NETWORK:
        aliases:
          - kafka3

  orderer0:
    hostname: orderer0.example.com
    image: hyperledger/fabric-orderer:x86_64-1.1.0
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=EXTERNAL_NETWORK
      - ORDERER_HOST=orderer0.example.com
      - CONFIGTX_ORDERER_ORDERERTYPE=kafka
      - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
      - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
      - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_GENESISPROFILE=ImmutableEhrOrdererGenesis
      - ORDERER_ABSOLUTEMAXBYTES=10 MB
      - ORDERER_PREFERREDMAXBYTES=512 KB
      - ORDERER_HOME=/var/hyperledger/orderer
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LEDGERTYPE=ram
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=10
      - CONFIGTX_ORDERER_BATCHTIMEOUT=2s
      - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_TLS_CLIENTAUTHREQUIRED=false
      - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
      - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
      - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    volumes:
      - ./genesis.block:/var/hyperledger/orderer/orderer.genesis.block
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/msp:/var/hyperledger/orderer/msp
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/tls/:/var/hyperledger/orderer/tls
      - ./crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
      - orderer0.example.com:/var/hyperledger/production/orderer
      #- ./ledger/orderer.example.com:/var/hyperledger/production/orderer
    ports:
      - 7050:7050
    networks:
      EXTERNAL_NETWORK:
        aliases:
          - orderer0.example.com
  orderer1:
    hostname: orderer1.example.com
    image: hyperledger/fabric-orderer:x86_64-1.1.0
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=EXTERNAL_NETWORK
      - ORDERER_HOST=orderer1.example.com
      - CONFIGTX_ORDERER_ORDERERTYPE=kafka
      - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
      - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
      - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_GENESISPROFILE=ImmutableEhrOrdererGenesis
      - ORDERER_ABSOLUTEMAXBYTES=10 MB
      - ORDERER_PREFERREDMAXBYTES=512 KB
      - ORDERER_HOME=/var/hyperledger/orderer
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LEDGERTYPE=ram
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=10
      - CONFIGTX_ORDERER_BATCHTIMEOUT=2s
      - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_TLS_CLIENTAUTHREQUIRED=false
      - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
      - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
      - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    volumes:
      - ./genesis.block:/var/hyperledger/orderer/orderer.genesis.block
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/msp:/var/hyperledger/orderer/msp
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/tls/:/var/hyperledger/orderer/tls
      - ./crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
      - orderer1.example.com:/var/hyperledger/production/orderer
      #- ./ledger/orderer.example.com:/var/hyperledger/production/orderer
    ports:
      - 8050:7050
    networks:
      EXTERNAL_NETWORK:
        aliases:
          - orderer1.example.com
  
  orderer2:
    hostname: orderer2.example.com
    image: hyperledger/fabric-orderer:x86_64-1.1.0
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=EXTERNAL_NETWORK
      - ORDERER_HOST=orderer2.example.com
      - CONFIGTX_ORDERER_ORDERERTYPE=kafka
      - CONFIGTX_ORDERER_KAFKA_BROKERS=[kafka0:9092,kafka1:9092,kafka2:9092,kafka3:9092]
      - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
      - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_GENESISPROFILE=ImmutableEhrOrdererGenesis
      - ORDERER_ABSOLUTEMAXBYTES=10 MB
      - ORDERER_PREFERREDMAXBYTES=512 KB
      - ORDERER_HOME=/var/hyperledger/orderer
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LEDGERTYPE=ram
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=10
      - CONFIGTX_ORDERER_BATCHTIMEOUT=2s
      - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_TLS_CLIENTAUTHREQUIRED=false
      - ORDERER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@example.com/tls/ca.crt
      - ORDERER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@example.com/tls/client.crt
      - ORDERER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@example.com/tls/client.key
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    volumes:
      - ./genesis.block:/var/hyperledger/orderer/orderer.genesis.block
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/msp:/var/hyperledger/orderer/msp
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls/:/var/hyperledger/orderer/tls
      - ./crypto-config/ordererOrganizations/example.com/users:/var/hyperledger/users
      - orderer2.example.com:/var/hyperledger/production/orderer
      #- ./ledger/orderer.example.com:/var/hyperledger/production/orderer
    ports:
      - 9050:7050
    networks:
      EXTERNAL_NETWORK:
        aliases:
          - orderer2.example.com
 
  ca0:
    image: hyperledger/fabric-ca:x86_64-1.1.0
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
      restart_policy:
        condition: on-failure
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-DOMAIN
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.DOMAIN.example.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/CA_PRIVATE_KEY
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.DOMAIN.example.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/CA_PRIVATE_KEY -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/DOMAIN.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
      #- ./ledger/ca-DOMAIN:/etc/hyperledger/fabric-ca-server
    hostname: ca-DOMAIN
    networks:
      EXTERNAL_NETWORK:
        aliases:
          - ca-DOMAIN
  
  couchdb0:
    image: hyperledger/fabric-couchdb:x86_64-0.4.6
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - 5984:5984
    hostname: couchdb0
    networks:
      EXTERNAL_NETWORK:
        aliases:
          - couchdb0
  
  couchdb1:
    image: hyperledger/fabric-couchdb:x86_64-0.4.6
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - 6984:5984
    hostname: couchdb1
    networks:
      EXTERNAL_NETWORK:
        aliases:
          - couchdb1

  peer0_DOMAIN:
    hostname: peer0.DOMAIN.example.com
    image: hyperledger/fabric-peer:x86_64-1.1.0
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
      restart_policy:
        condition: on-failure
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=EXTERNAL_NETWORK
      #- CORE_LOGGING_LEVEL=INFO
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_CHAINCODE_STARTUPTIMEOUT=1200s
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.DOMAIN.example.com
      - CORE_PEER_ADDRESS=peer0.DOMAIN.example.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.DOMAIN.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.DOMAIN.example.com:7051
      - CORE_PEER_LOCALMSPID=DOMAINMSP
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0:5984
      - CORE_PEER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@DOMAIN.example.com/tls/ca.crt
      - CORE_PEER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@DOMAIN.example.com/tls/client.crt
      - CORE_PEER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@DOMAIN.example.com/tls/client.key
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/DOMAIN.example.com/peers/peer0.DOMAIN.example.com/msp:/etc/hyperledger/fabric/msp
      - ./crypto-config/peerOrganizations/DOMAIN.example.com/peers/peer0.DOMAIN.example.com/tls:/etc/hyperledger/fabric/tls
      - ./crypto-config/peerOrganizations/DOMAIN.example.com/users:/var/hyperledger/users
      - peer0.DOMAIN.example.com:/var/hyperledger/production
      #- ./ledger/peer0.${DOMAIN}.exapmle.com:/var/hyperledger/production
    ports:
      - "7051:7051"
      - "7053:7053"
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    depends_on:
      - couchdb0
    networks:
      EXTERNAL_NETWORK:
        aliases:
          - peer0.DOMAIN.example.com

  peer1_DOMAIN:
    hostname: peer1.DOMAIN.example.com
    image: hyperledger/fabric-peer:x86_64-1.1.0
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
      restart_policy:
        condition: on-failure
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=EXTERNAL_NETWORK
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_CHAINCODE_STARTUPTIMEOUT=1200s
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      #- CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer1.DOMAIN.example.com
      - CORE_PEER_ADDRESS=peer1.DOMAIN.example.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.DOMAIN.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.DOMAIN.example.com:7051
      - CORE_PEER_LOCALMSPID=DOMAINMSP
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1:5984
      - CORE_PEER_TLS_CLIENTROOTCAS_FILES=/var/hyperledger/users/Admin@DOMAIN.example.com/tls/ca.crt
      - CORE_PEER_TLS_CLIENTCERT_FILE=/var/hyperledger/users/Admin@DOMAIN.example.com/tls/client.crt
      - CORE_PEER_TLS_CLIENTKEY_FILE=/var/hyperledger/users/Admin@DOMAIN.example.com/tls/client.key
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/DOMAIN.example.com/peers/peer1.DOMAIN.example.com/msp:/etc/hyperledger/fabric/msp
      - ./crypto-config/peerOrganizations/DOMAIN.example.com/peers/peer1.DOMAIN.example.com/tls:/etc/hyperledger/fabric/tls
      - ./crypto-config/peerOrganizations/DOMAIN.example.com/users:/var/hyperledger/users
      - peer1.DOMAIN.example.com:/var/hyperledger/production
      #- ./ledger/peer1.${DOMAIN}.exapmle.com:/var/hyperledger/production
    ports:
      - "8051:7051"
      - "8053:7053"
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    depends_on:
      - couchdb1
    networks:
      EXTERNAL_NETWORK:
        aliases:
          - peer1.DOMAIN.example.com

  cli:
    hostname: cli
    image: hyperledger/fabric-tools:x86_64-1.1.0
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
      restart_policy:
        condition: on-failure
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      #- CORE_LOGGING_LEVEL=DEBUG
      - CORE_LOGGING_LEVEL=INFO
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.DOMAIN.example.com:7051
      - CORE_PEER_LOCALMSPID=DOMAINMSP
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/DOMAIN.example.com/peers/peer0.DOMAIN.example.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/DOMAIN.example.com/peers/peer0.DOMAIN.example.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/DOMAIN.example.com/peers/peer0.DOMAIN.example.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/DOMAIN.example.com/users/Admin@DOMAIN.example.com/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ../chaincode/:/opt/gopath/src/github.com/chaincode
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
        - ../scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
    networks:
      EXTERNAL_NETWORK:
        aliases:
          - cli 
networks:
  EXTERNAL_NETWORK:
    external:
      name: EXTERNAL_NETWORK